name: Build and Deploy # เปลี่ยนชื่อ Workflow ให้สื่อถึง Build และ Deploy ด้วย

on:
  push:
    branches:
      - main
      - feature/devops-pipeline # ตรวจสอบให้แน่ใจว่า branch นี้ถูกรวมอยู่
  pull_request:
    branches:
      - main
      - feature/devops-pipeline

jobs:
  test:
    name: Run Unit and Integration Tests
    runs-on: ubuntu-latest
    env:
      CI: true # บอก Jest ว่ากำลังรันในสภาพแวดล้อม CI

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      # --- ขั้นตอนการ Debug เพิ่มเติมสำหรับปัญหา Jest Permission ---
      - name: Check current directory and PATH
        run: |
          echo "Current Working Directory: $(pwd)"
          echo "PATH: $PATH"
          echo "--- Content of node_modules/.bin/ ---"
          ls -l node_modules/.bin/
          echo "--- Jest Binary Details ---"
          which jest || echo "jest not found in PATH"
          find node_modules/.bin/ -name "jest" -ls || echo "jest binary not found in node_modules/.bin/"
          file node_modules/.bin/jest || echo "node_modules/.bin/jest not a valid file"
          stat node_modules/.bin/jest || echo "Failed to stat node_modules/.bin/jest"

      - name: Attempt to make Jest Executable
        run: |
          # ตรวจสอบว่าไฟล์มีอยู่ก่อน chmod
          if [ -f "node_modules/.bin/jest" ]; then
            chmod +x node_modules/.bin/jest
            echo "Successfully applied chmod +x to node_modules/.bin/jest"
          else
            echo "Warning: node_modules/.bin/jest not found, cannot apply chmod +x."
            exit 1 # ถ้าหาไม่เจอจริงๆ ก็ควร fail
          fi
          echo "--- Test Jest Executability After Chmod ---"
          npx jest --version # ลองรันอีกครั้งหลัง chmod
      # --- สิ้นสุดขั้นตอน Debug ---

      - name: Run tests
        run: npm test # อันนี้จะเรียก script "test" ใน package.json ซึ่งตอนนี้ควรเป็น "npx jest"

  build-and-push-docker: # <<< --- Job ใหม่สำหรับ Docker Build และ Push --- >>>
    name: Build and Push Docker Image
    needs: test # Job นี้จะรันได้ก็ต่อเมื่อ Job 'test' ผ่านแล้วเท่านั้น
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # --- เปลี่ยนจาก GitHub Container Registry เป็น Docker Hub ---
      - name: Log in to Docker Hub
        # เงื่อนไขการรัน: เฉพาะตอน push บน branch 'main' หรือ 'feature/devops-pipeline' เท่านั้น
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/feature/devops-pipeline')
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }} # ดึงชื่อผู้ใช้ Docker Hub จาก Secret
          password: ${{ secrets.DOCKER_PASSWORD }} # ดึง Personal Access Token จาก Secret

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          # <<< --- เปลี่ยน Tags ให้เป็นชื่อ Repository ของ Docker Hub --- >>>
          # ต้องเป็น 'your_dockerhub_username/your_image_name'
          # ตัวอย่าง: myusername/restaurant_reservation_webservice
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/restaurant_reservation_webservice:latest
            ${{ secrets.DOCKER_USERNAME }}/restaurant_reservation_webservice:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max